"use strict";(self.webpackChunkinterzone=self.webpackChunkinterzone||[]).push([[64621],{64621:(a,e,t)=>{t.d(e,{fulfillRequest:()=>s});var n=t(51784);async function s(a){const{wallet:e,walletConnectClient:s,thirdwebClient:i,event:{topic:r,id:o,params:{chainId:c,request:l}},handlers:d}=a,h=e.getAccount();if(!h)throw new Error("No account connected to provided wallet");let p;try{switch(l.method){case"personal_sign":if(null!==d&&void 0!==d&&d.personal_sign)p=await d.personal_sign({account:h,params:l.params});else{const{handleSignRequest:a}=await Promise.resolve().then(t.bind(t,1558));p=await a({account:h,params:l.params})}break;case"eth_sign":if(null!==d&&void 0!==d&&d.eth_sign)p=await d.eth_sign({account:h,params:l.params});else{const{handleSignRequest:a}=await Promise.resolve().then(t.bind(t,1558));p=await a({account:h,params:l.params})}break;case"eth_signTypedData":if(null!==d&&void 0!==d&&d.eth_signTypedData)p=await d.eth_signTypedData({account:h,params:l.params});else{const{handleSignTypedDataRequest:a}=await Promise.resolve().then(t.bind(t,57904));p=await a({account:h,params:l.params})}break;case"eth_signTypedData_v4":if(null!==d&&void 0!==d&&d.eth_signTypedData_v4)p=await d.eth_signTypedData_v4({account:h,params:l.params});else{const{handleSignTypedDataRequest:a}=await Promise.resolve().then(t.bind(t,57904));p=await a({account:h,params:l.params})}break;case"eth_signTransaction":if(null!==d&&void 0!==d&&d.eth_signTransaction)p=await d.eth_signTransaction({account:h,params:l.params});else{const{handleSignTransactionRequest:a}=await Promise.resolve().then(t.bind(t,15599));p=await a({account:h,params:l.params})}break;case"eth_sendTransaction":{const a=(0,n.p)(c);if(null!==d&&void 0!==d&&d.eth_sendTransaction)p=await d.eth_sendTransaction({account:h,chainId:a,params:l.params});else{const{handleSendTransactionRequest:e}=await Promise.resolve().then(t.bind(t,68624));p=await e({account:h,chainId:a,thirdwebClient:i,params:l.params})}break}case"eth_sendRawTransaction":{const a=(0,n.p)(c);if(null!==d&&void 0!==d&&d.eth_sendRawTransaction)p=await d.eth_sendRawTransaction({account:h,chainId:a,params:l.params});else{const{handleSendRawTransactionRequest:e}=await Promise.resolve().then(t.bind(t,99003));p=await e({account:h,chainId:a,params:l.params})}break}case"wallet_addEthereumChain":if(null===d||void 0===d||!d.wallet_addEthereumChain)throw new Error("Unsupported request method: wallet_addEthereumChain");p=await d.wallet_addEthereumChain({wallet:e,params:l.params});break;case"wallet_switchEthereumChain":if(null!==d&&void 0!==d&&d.wallet_switchEthereumChain)p=await d.wallet_switchEthereumChain({wallet:e,params:l.params});else{const{handleSwitchChain:a}=await Promise.resolve().then(t.bind(t,27795));p=await a({wallet:e,params:l.params})}break;default:{const a=null===d||void 0===d?void 0:d[l.method];if(!a)throw new Error("Unsupported request method: ".concat(l.method));p=await a({account:h,chainId:(0,n.p)(c),params:l.params})}}}catch(m){p={code:"object"===typeof m&&null!==m&&"code"in m?m.code:500,message:"object"===typeof m&&null!==m&&"message"in m?m.message:"Unknown error"}}s.respond({topic:r,response:{id:o,jsonrpc:"2.0",result:p}})}}}]);
//# sourceMappingURL=64621.a90a661b.chunk.js.map